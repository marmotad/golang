package main

import "fmt"

/*	冒泡排序
	原理：比较两个相邻的元素，将值大的元素交换至右端。
	思路：依次比较相邻的两个数，将小数放在前面，大数放在后面。即在第一趟：首先比较第1个和第2个数，将小数放前，大数放后。然后比较第2个数和第3个数，将小数放前，大数放后，如此继续，直至比较最后两个数，将小数放前，大数放后。重复第一趟步骤，直至全部排序完成。
*/
func main() {
	array := []int{10, 100, 90, 88, 46}
	//外层循环用于控制循环次数
	fmt.Println("方法一：")
	for i := 0; i < len(array)-1; i++ {
		//内层循环，控制循环的每次循环排序多少次
		for j := 0; j < len(array)-1-i; j++ {
			//判断当前数组的元素的值是否大于下一个数组元素的值，如果大于交换当前元素的值
			if array[j] > array[j+1] {
				array[j], array[j+1] = array[j+1], array[j]
			}
		}
	}
	fmt.Println(array)
}
